{"version":3,"sources":["App.js","components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","reportWebVitals.js","index.js"],"names":["timer","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","col","index","Button","status","onStart","onRestart","onStop","ManipulationPanel","onChange","getFoodPosition","fieldSize","exclude","x","Math","floor","random","y","some","item","initFields","snake","food","i","cols","Array","fill","push","GameStatus","Object","freeze","init","playing","suspended","gamever","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","unsubscribe","clearInterval","defaultFieldSize","initialBody","initialFood","initialFields","Difficulty","initialState","body","reducer","state","action","newBody","nextPos","newFields","type","remove","pop","nextFood","App","useReducer","dispatch","useState","setStatus","direction","setDirection","setDifficulty","onChangeDirection","useCallback","newDirection","useEffect","setInterval","position","newPosition","isEatingMyself","newFoodPos","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44b8cd1a.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState, useReducer } from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport Field from \"./components/Field\";\nimport Button from \"./components/Button\";\nimport ManipulationPanel from \"./components/ManipulationPanel\";\nimport { initFields, getFoodPosition } from \"./utils\";\n\n// 定数\nconst GameStatus = Object.freeze({\n  init: \"init\",\n  playing: \"playing\",\n  suspended: \"suspended\",\n  gamever: \"gameover\",\n});\n\nconst Direction = Object.freeze({\n  up: \"up\",\n  right: \"right\",\n  left: \"left\",\n  down: \"down\",\n});\n\nconst OppositeDirection = Object.freeze({\n  up: \"down\",\n  right: \"left\",\n  left: \"right\",\n  down: \"up\",\n});\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n});\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\n// タイマー\nlet timer;\nconst unsubscribe = () => {\n  if (!timer) {\n    return;\n  }\n  clearInterval(timer);\n};\n\n// 関数\nconst isCollision = (position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n  if (position.y > defaultFieldSize - 1 || position.x > defaultFieldSize - 1) {\n    return true;\n  }\n  return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === \"snake\";\n};\n\n// initial/default\nconst defaultFieldSize = 35;\nconst initialBody = { x: 17, y: 17 };\nconst initialFood = getFoodPosition(defaultFieldSize, [initialBody]);\nconst initialFields = initFields(defaultFieldSize, initialBody, initialFood);\nconst defaultDifficulty = 3;\nconst Difficulty = [1000, 500, 100, 50, 10];\n\n// reducer\nconst initialState = {\n  body: [initialBody],\n  food: initialFood,\n  fields: initialFields,\n};\n\nconst reducer = (state, action) => {\n  const newBody = [action.nextPos, ...state.body];\n  const newFields = [...state.fields];\n  switch (action.type) {\n    case \"reset\":\n      return {\n        body: [initialBody],\n        food: initialFood,\n        fields: initFields(defaultFieldSize, initialBody, initialFood),\n      };\n    case \"continue\":\n      const remove = newBody.pop();\n      newFields[remove.y][remove.x] = \"\";\n      newFields[newBody[0].y][newBody[0].x] = \"snake\";\n      return {\n        ...state,\n        body: newBody,\n        fields: newFields,\n      };\n    case \"newFood\":\n      newFields[action.nextPos.y][action.nextPos.x] = \"snake\";\n      newFields[action.nextFood.y][action.nextFood.x] = \"food\";\n      return {\n        body: newBody,\n        food: action.nextFood,\n        fields: newFields,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [status, setStatus] = useState(GameStatus.init);\n  const [direction, setDirection] = useState(Direction.up);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n\n  const onStart = () => setStatus(GameStatus.playing);\n  const onStop = () => setStatus(GameStatus.suspended);\n\n  const onRestart = () => {\n    setStatus(GameStatus.init);\n    setDirection(Direction.up);\n    dispatch({ type: \"reset\" });\n  };\n\n  const onChangeDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return direction;\n      }\n      if (OppositeDirection[direction] === newDirection) {\n        return;\n      }\n      setDirection(newDirection);\n    },\n    [direction, status]\n  );\n\n  const onChangeDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return;\n      }\n      if (difficulty < 1 || difficulty > Difficulty.length) {\n        return;\n      }\n      setDifficulty(difficulty);\n    },\n    [status]\n  );\n\n  // メイン処理\n  useEffect(() => {\n    if (status !== GameStatus.playing) {\n      return;\n    }\n\n    const interval = Difficulty[difficulty - 1];\n    timer = setInterval(() => {\n      const newPosition = {\n        x: state.body[0].x + Delta[direction].x,\n        y: state.body[0].y + Delta[direction].y,\n      };\n\n      if (isCollision(newPosition) || isEatingMyself(state.fields, newPosition)) {\n        setStatus(GameStatus.gamever);\n      } else {\n        if (state.fields[newPosition.y][newPosition.x] === \"food\") {\n          const newFoodPos = getFoodPosition(defaultFieldSize, [...state.body, newPosition]);\n          dispatch({\n            type: \"newFood\",\n            nextPos: newPosition,\n            nextFood: newFoodPos,\n          });\n        } else {\n          dispatch({\n            type: \"continue\",\n            nextPos: newPosition,\n          });\n        }\n      }\n    }, interval);\n    return unsubscribe;\n  }, [state, status, direction, difficulty]);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [onChangeDirection]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"nav-title\">Snake Game</h1>\n        </div>\n        <Navigation key=\"navigation\" length={state.body.length} difficulty={difficulty} onChangeDifficulty={onChangeDifficulty} />\n      </header>\n      <main className=\"main\">\n        <Field fields={state.fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button status={status} onStart={onStart} onRestart={onRestart} onStop={onStop} />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n  const upVisibility = difficulty < 5 ? \"\" : \"is-hidden\";\n  const downVisibility = difficulty > 1 ? \"\" : \"is-hidden\";\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Length: </span>\n        <div className=\"navigation-item-number-container\">\n          <div className=\"num-board\">{length}</div>\n        </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div className={`difficulty-button difficulty-up ${upVisibility}`} onClick={onUpDifficulty}></div>\n            <div className={`difficulty-button difficulty-down ${downVisibility}`} onClick={onDownDifficulty}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nconst Field = ({fields}) => {\n  return (\n    <div className=\"field\">\n      {\n        fields.map((row) => {\n          return row.map((col, index) => {\n            return <div className={`dots ${col}`} key={index}></div>\n          })\n        })\n      }\n    </div>\n  );\n};\n\nexport default Field;","import React from \"react\";\n\nconst Button = ({ status, onStart, onRestart, onStop }) => {\n  return (\n    <div className=\"button\">\n      {status === \"gameover\" && (\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\n          gameover\n        </button>\n      )}\n      {status === \"init\" && (\n        <button className=\"btn btn-init\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === \"suspended\" && (\n        <button className=\"btn btn-suspended\" onClick={onStart}>\n          start\n        </button>\n      )}\n      {status === \"playing\" && (\n        <button className=\"btn btn-playing\" onClick={onStop}>\n          stop\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst ManipulationPanel = ({ onChange }) => {\n  const onUp = () => onChange(\"up\");\n  const onRight = () => onChange(\"right\");\n  const onLeft = () => onChange(\"left\");\n  const onDown = () => onChange(\"down\");\n\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n        ←\n      </button>\n      <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          ↑\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          ↓\n        </button>\n      </div>\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        →\n      </button>\n    </div>\n  );\n};\n\nexport default ManipulationPanel;\n","export const getFoodPosition = (fieldSize, exclude) => {\n  while (true) {\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    const conflict = exclude.some(item => item.x === x && item.y === y);\n\n    if (!conflict) {\n      return { y, x };\n    }\n   }\n }\n\nexport const initFields = (fieldSize, snake, food) => {\n  const fields = [];\n  for (let i = 0; i < fieldSize; i++) {\n    const cols = new Array(fieldSize).fill('');\n    fields.push(cols);\n  }\n  fields[snake.y][snake.x] = 'snake'\n  fields[food.y][food.x] = 'food'\n  return fields;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}